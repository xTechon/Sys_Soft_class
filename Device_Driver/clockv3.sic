CLOCK       START       7F01        # program title
# Variables
MINS        RESW        1           # store mins
HRS         RESW        1           # store hours
LETT        RESW        1           # store the letter used
# litterals
COUNT       WORD        -2
ZERO        WORD        0
TEN         WORD        10
TWELVE      WORD        12
CONV        WORD        48
SIXTY       WORD        60
DEVICE      WORD        64
CONST       BYTE        X,'0FFFFF'
A           WORD        65
P           WORD        80
# instructions
UPDATE      LDA         SECOND      # load the seconds since midnight into the A reg
            COMP        ZERO        # compare with zero, 24 hr will read as negative
            JLT         ADJUST      # jump to adjust for 20 hour
            LDX         ZERO        # zero out X reg if not 24
            J           CONT        # jump to continue
#
## change 24 hour time into positive
#
ADJUST      AND         CONST       # get rid of sign bit for sic comparisons
            LDX         COUNT       # prepare X reg for comparisons
#
## continue with getting mins and hours since midnight
#
CONT        COMP        SIXTY       # check if less than 1 min after midnight
            JLT         MID         # jump to midnight routine
            DIV         SIXTY       # div seconds by 60
            STA         MINS        # store mins since midnight into memory
            DIV         SIXTY       # div mins by 60
            STA         HRS         # store the hours since midnight into memory
#
## All hours computation
#
            TIX         ZERO        # run the comparison for 24 time
            JLT         CALC        # skip 12 hour behavior
# 12 hour behavior
            LDL         A           # load the letter A into the L reg
            STL         LETT        # store the letter A into memory
            COMP        TWELVE      # compare A reg with 12
            JGT         PM          # jump to PM behavior
            JEQ         NOON
# General hour calculation
CALC        DIV         TEN         # get 10s place 
            ADD         CONV        # convert to ASCII character
            WD          DEVICE      # send 10s place of hour to device
            LDA         HRS         # reload hours since midnight (or hours since noon)
            JSUB        ONES        # call ONES method
            ADD         CONV        # convert ones place to ASCII
            WD          DEVICE      # write 1s place to device
            J           MIN         # jump to MIN section
#
## PM behavior
#
PM         SUB          TWELVE      # A reg still has hours since midnight loaded, subtract 12
NOON       STA          HRS         # store the hours into A reg
           LDL          P           # load the letter P into the L reg
           STL          LETT        # store the letter P into memory
           J            CALC        # go back to main hour calculation
#
## mod by 10 funciton
#
ONES        SUB         TEN         # start of mod
            COMP        ZERO        # compare with zero
            JGT         ONES        # jump if greater than zero
            JEQ         RET         # skip goback if zero
            ADD         TEN         # goback if it became negative
RET         RSUB
#
## MIN handling
#
MIN         LDA         MINS        # load the mins since midnight
MOD         SUB         SIXTY       # get the mins in an hour
            COMP        ZERO        # compare to zero
            JGT         MOD
            JEQ         SKIP
            ADD         SIXTY       # addback if negative
SKIP        STA         MINS        # store mins back into memory
            DIV         TEN         # get 10s place
            ADD         CONV        # convert to ASCII
            WD          DEVICE
            LDA         MINS        # reload mins in an hour
            JSUB        ONES        # get ones place
            ADD         CONV        # Convert to ASCII
            WD          DEVICE      # write to device
            J           TERM
#
## Midnight routine
#
MID         LDA         CONV        # load 0 into A reg
            WD          DEVICE      # write 4 0s to Device
            WD          DEVICE      
            WD          DEVICE
            WD          DEVICE
            LDA         SECOND      # check for 12 or 24 hour
            COMP        ZERO
            JLT         DONE        # skip to done if 24 hour
            LDA         A           # load character A into A reg
            WD          DEVICE
            J           DONE
#
## END routine
#
TERM        TIX         ZERO        # run comp on 24 hour
            JEQ         DONE        # skip 12 hour routine if X reg = 0
            LDA         LETT        # load letter into A reg
            WD          DEVICE      # write A or P to device
DONE        LDL         ZERO        # load zero into the LDL register
            RSUB
SECOND      RESW        1           # reserve last bit for seconds
            END         UPDATE      # Terminate program
